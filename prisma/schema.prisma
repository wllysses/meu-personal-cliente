generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  Client        Client[]
  Exercise      Exercise[]
  sessions      Session[]
  Training      Training[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Client {
  id         String     @id @default(cuid())
  name       String
  age        Int
  weight     Float
  height     Float
  phone      String
  created_at DateTime   @default(now())
  user_id    String
  user       User       @relation(fields: [user_id], references: [id])
  Feedback   Feedback[]
  Training   Training[]
}

model Training {
  id          String     @id @default(cuid())
  name        String
  description String
  created_at  DateTime   @default(now())
  user_id     String
  client_id   String
  Exercise    Exercise[]
  Feedback    Feedback[]
  client      Client     @relation(fields: [client_id], references: [id])
  user        User       @relation(fields: [user_id], references: [id])
}

model Exercise {
  id            String   @id @default(cuid())
  name          String
  description   String
  muscle_groupd String
  repetitions   Int
  weight        Int
  pause_time    String
  created_at    DateTime @default(now())
  user_id       String
  training_id   String
  series        Int
  training      Training @relation(fields: [training_id], references: [id], onDelete: Cascade)
  user          User     @relation(fields: [user_id], references: [id])
}

model Feedback {
  id          String   @id @default(cuid())
  comment     String
  created_at  DateTime @default(now())
  client_id   String
  training_id String
  client      Client   @relation(fields: [client_id], references: [id])
  training    Training @relation(fields: [training_id], references: [id], onDelete: Cascade)
}
